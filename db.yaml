# - name: configure the db
#   hosts: db
#   become: yes
#   vars_prompt:
#     - name: mysql_root_password
#       prompt: "Please enter MySQL root password"
#       private: true
#   vars:
#     login_host: db.daws-78s.xyz
#   tasks:
#     - name: install mysql server
#       ansible.builtin.dnf:
#         name: mysql-server
#         state: latest

#     - name: start and enable mysql server
#       ansible.builtin.service:
#         name: mysqld
#         state: started
#         enabled: yes

#     - name: install python dependencies
#       ansible.builtin.pip:
#         name:
#           - PyMySQL
#           - cryptography
#         executable: pip3.9

#     - name: check db connection
#       community.mysql.mysql_info:
#         login_user: root
#         login_password: "{{ mysql_root_password }}"
#         login_host: "{{ login_host }}"
#         filter: version
#       register: mysql_connection_output
#       ignore_errors: true # allow the playbook to continue

#     - name: print output
#       ansible.builtin.debug:
#         msg: "output {{ mysql_connection_output }}"

#     - name: set up root password
#       ansible.builtin.command: "mysql_secure_installation --set-root-pass={{ mysql_root_password }}"
#       when: mysql_connection_output.failed

#     - name: secure mysql installation
#       ansible.builtin.command: "mysql_secure_installation --force"
#       when: mysql_connection_output.failed

- name: configure DB server
  hosts: db
  become: yes
  vars:
    login_host: db.daws78s.xyz
  vars_prompt:
  - name: mysql_root_password
    prompt: please enter MySQL root password
    private: no
  tasks:
  - name: Install MySQL Server
    ansible.builtin.dnf:
      name: mysql-server
      state: latest

  - name: Start and Enable MySQL server
    ansible.builtin.service:
      name: mysqld
      state: started
      enabled: yes

  - name: install python mysql dependencies
    ansible.builtin.pip:
      name:
      - PyMySQL
      - cryptography
      executable: pip3.9 # pip3.11 if python version is 3.11

  # check password is already setup or not
  - name: check DB connection
    community.mysql.mysql_info:
      login_user: root
      login_password: "{{ mysql_root_password }}"
      login_host: "{{ login_host }}"
      filter: version
    ignore_errors: yes
    register: mysql_connection_output

  - name: print output
    ansible.builtin.debug:
      msg: "Output: {{mysql_connection_output}} "

  - name: setup root password
    ansible.builtin.command: "mysql_secure_installation --set-root-pass {{ mysql_root_password }}"
    when: mysql_connection_output.failed is true # don't give {{ }} in when condition